import React, { useState } from 'react';

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
const products = {
    hot: [
        { id: 1, name: '‡∏Å‡∏≤‡πÅ‡∏ü‡∏î‡∏≥‡∏£‡πâ‡∏≠‡∏ô', price: 50 },
        { id: 2, name: '‡∏•‡∏≤‡πÄ‡∏ï‡πâ‡∏£‡πâ‡∏≠‡∏ô', price: 60 },
        { id: 3, name: '‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà‡∏£‡πâ‡∏≠‡∏ô', price: 65 },
    ],
    cold: [
        { id: 4, name: '‡∏Å‡∏≤‡πÅ‡∏ü‡πÄ‡∏¢‡πá‡∏ô', price: 60 },
        { id: 5, name: '‡∏•‡∏≤‡πÄ‡∏ï‡πâ‡πÄ‡∏¢‡πá‡∏ô', price: 65 },
        { id: 6, name: '‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà‡πÄ‡∏¢‡πá‡∏ô', price: 70 },
    ],
    blended: [
        { id: 7, name: '‡∏Å‡∏≤‡πÅ‡∏ü‡∏õ‡∏±‡πà‡∏ô', price: 65 },
        { id: 8, name: '‡∏•‡∏≤‡πÄ‡∏ï‡πâ‡∏õ‡∏±‡πà‡∏ô', price: 70 },
        { id: 9, name: '‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà‡∏õ‡∏±‡πà‡∏ô', price: 75 },
    ]
};

const Customer = () => {
    const [cart, setCart] = useState([]);
    const [selectedCategory, setSelectedCategory] = useState('hot');
    const [showCart, setShowCart] = useState(false); // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
    
    const addToCart = (product) => {
        setCart((prevCart) => {
            return prevCart.map(item => 
                item.id === product.id 
                    ? { ...item, quantity: item.quantity + 1 } 
                    : item
            ).concat(
                prevCart.some(item => item.id === product.id) 
                    ? [] 
                    : [{ ...product, quantity: 1 }]
            );
        });

        setShowCart(true); // ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡πá‡∏ö‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    };

    const removeFromCart = (id) => {
        setCart((prevCart) => prevCart.filter(item => item.id !== id));
    };

    const getTotalPrice = () => {
        return cart.reduce((total, item) => total + item.price * item.quantity, 0);
    };

    return (
        <div className="container relative">
            <h1 className="text-center text-2xl font-bold">Customer - Menu Coffee Shop</h1>
            
            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà */}
            <div className="categories mt-8 flex justify-center space-x-6">
                <button className="btn" onClick={() => setSelectedCategory('hot')}>‡∏£‡πâ‡∏≠‡∏ô</button>
                <button className="btn" onClick={() => setSelectedCategory('cold')}>‡πÄ‡∏¢‡πá‡∏ô</button>
                <button className="btn" onClick={() => setSelectedCategory('blended')}>‡∏õ‡∏±‡πà‡∏ô</button>
            </div>

            {/* ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
            <div className="products mt-8 flex justify-center space-x-6">
                <div className="category">
                    <h2 className="font-semibold">
                        {selectedCategory === 'hot' ? '‡∏£‡πâ‡∏≠‡∏ô' : selectedCategory === 'cold' ? '‡πÄ‡∏¢‡πá‡∏ô' : '‡∏õ‡∏±‡πà‡∏ô'}
                    </h2>
                    <ul>
                        {products[selectedCategory].map((product) => (
                            <li key={product.id} className="product">
                                <span>{product.name} - {product.price} ‡∏ø</span>
                                <button className="add-btn" onClick={() => addToCart(product)}>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤</button>
                            </li>
                        ))}
                    </ul>
                </div>
            </div>

            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏£‡∏á‡∏ß‡∏á‡∏Å‡∏•‡∏° */}
            <button
                onClick={() => setShowCart(!showCart)}
                className="absolute top-4 right-4 bg-red-500 text-white rounded-full p-4"
            >
                üõí
            </button>

            {/* ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏Ç‡∏ß‡∏≤ */}
            <div
                className={`cart p-4 border border-gray-300 rounded-lg shadow-lg absolute top-16 right-0 bg-white w-72 transition-transform duration-500 ${
                    showCart ? 'transform translate-x-0' : 'transform translate-x-full'
                }`}
            >
                <h2 className="text-xl font-semibold">‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h2>
                <ul>
                    {cart.map((item) => (
                        <li key={item.id} className="cart-item flex justify-between">
                            <span>{item.name} (x{item.quantity})</span>
                            <button onClick={() => removeFromCart(item.id)} className="remove-btn">‡∏•‡∏ö</button>
                        </li>
                    ))}
                </ul>

                <div className="total-price mt-4">
                    <h3>‡∏£‡∏ß‡∏°: {getTotalPrice()} ‡∏ø</h3>
                </div>
            </div>
        </div>
    );
};

export default Customer;
